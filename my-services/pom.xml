<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.samsonmarikwa</groupId>
    <artifactId>my-services</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>my-services</name>
    <url>https://www.samsonmarikwa.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spring.boot.maven.plugin.version>2.7.2</spring.boot.maven.plugin.version>
        <spring.boot.dependencies.version>2.7.2</spring.boot.dependencies.version>
    </properties>

    <!--
    dependencyManagement and dependencies.
    These features are especially useful for multi-module projects.

    The dependencyManagement tag is used to avoid repeating the version and scope tags when we define
    dependencies.

    dependencyManagement is just a declaration, it does not add the dependency. Sub-modules can pick the
    dependencies they want under spring-boot-dependencies. The declared dependencies in this section must
    be specified in the dependencies tag. The dependencies tag causes real dependency to happen.

    So, the dependencyManagement tag below does not add spring-boot-dependencies into any scope. It is just
    a declaration for the future dependencies tag.
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!--
    All submodules inherit the dependencies listed below without explicitly defining these
    dependencies. This section causes real dependency to take place.
    -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.maven.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
